apiVersion: v1
kind: ConfigMap
metadata:
  name: testdatapy-correlated-sasl-config
  namespace: default
data:
  kafka-config.json: |
    {
      "bootstrap.servers": "kafka.confluent:9092",
      "security.protocol": "SASL_PLAINTEXT",
      "sasl.mechanism": "PLAIN",
      "sasl.username": "kafka",
      "sasl.password": "kafka-secret"
    }
  correlation-config.yaml: |
    master_data:
      customers:
        kafka_topic: "ecommerce-customers"
        id_field: "customer_id"
        source: "faker"
        count: 50
        bulk_load: true
        schema:
          customer_id:
            type: "string"
            format: "CUST_{seq:04d}"
          name:
            type: "faker"
            method: "name"
          email:
            type: "faker"
            method: "email"
          phone:
            type: "faker"
            method: "phone_number"
          country:
            type: "faker"
            method: "country"

    transactional_data:
      orders:
        kafka_topic: "ecommerce-orders"
        id_field: "order_id"
        rate_per_second: 5
        track_recent: true
        max_messages: 500  # Smaller for testing
        relationships:
          customer_id:
            references: "customers.customer_id"
            distribution: "zipf"
            alpha: 1.5
        derived_fields:
          order_id:
            type: "uuid"
          order_date:
            type: "timestamp"
            format: "iso8601"
          total_amount:
            type: "random_float"
            min: 10.0
            max: 500.0
          status:
            type: "string"
            initial_value: "pending"
            
      payments:
        kafka_topic: "ecommerce-payments"
        rate_per_second: 3
        max_messages: 200  # Smaller for testing
        relationships:
          order_id:
            references: "orders.order_id"
            recency_bias: true
        derived_fields:
          payment_id:
            type: "uuid"
          payment_date:
            type: "timestamp"
            format: "iso8601"
          amount:
            type: "reference"
            source: "orders.total_amount"
            via: "order_id"
          payment_method:
            type: "choice"
            values: ["credit_card", "debit_card", "paypal", "bank_transfer"]
          status:
            type: "string"
            initial_value: "completed"