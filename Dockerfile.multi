# Build stage
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libsasl2-dev \
    libssl-dev \
    libffi-dev \
    librdkafka-dev \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Copy only dependency files first for better caching
COPY pyproject.toml .
COPY src/ src/

# Install dependencies and build wheel
RUN pip install --upgrade pip wheel
RUN pip wheel --no-cache-dir --wheel-dir /wheels .

# Runtime stage
FROM python:3.11-slim

# Install runtime dependencies only
# librdkafka1 is the runtime version of librdkafka-dev
# libsasl2-2 is already included (same as single-stage)
# openssl is already included (same as single-stage)
RUN apt-get update && apt-get install -y \
    librdkafka1 \
    libsasl2-2 \
    openssl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 appuser

WORKDIR /app 

# Copy wheels from builder
COPY --from=builder /wheels /wheels

# Install the application
RUN pip install --no-cache-dir /wheels/*.whl && rm -rf /wheels

# Change ownership of app directory to match single-stage
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Health check script
COPY --chown=appuser:appuser <<EOF /usr/local/bin/healthcheck.sh
#!/bin/sh
ps aux | grep testdatapy | grep -v grep
EOF
RUN chmod +x /usr/local/bin/healthcheck.sh

# Add labels
LABEL org.opencontainers.image.title="TestDataPy"
LABEL org.opencontainers.image.description="Kafka test data generator"
LABEL org.opencontainers.image.vendor="TestDataPy"
LABEL org.opencontainers.image.version="${VERSION:-0.1.0}"

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh || exit 1

# Default command (matching single-stage)
CMD ["testdatapy", "--help"]
