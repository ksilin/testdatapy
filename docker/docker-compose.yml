services:

  kafka:
    image: confluentinc/cp-kafka:7.9.1
    hostname: kafka
    container_name: testdatapy-kafka    
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9101:9101"  # JMX port
    environment:
      # KRaft combined mode settings
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      
      # Listeners configuration
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      
      # Controller quorum configuration
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      
      # Log directories
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      
      # Cluster ID (you can generate a new one with kafka-storage random-uuid)
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
      
      # Other standard Kafka settings
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      
      # JMX settings
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s


  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.1
    hostname: schema-registry
    container_name: testdatapy-schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-init:
    image: confluentinc/cp-kafka:7.9.1
    depends_on:
      - kafka
    container_name: testdatapy-kafka-init
    command: |
      bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka:29092 1 20 && \
      kafka-topics --create --topic test-json --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --if-not-exists && \
      kafka-topics --create --topic test-avro --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --if-not-exists && \
      echo Topics created successfully'

volumes:
  kafka-data:
    driver: local

networks:
  default:
    name: testdata-network
